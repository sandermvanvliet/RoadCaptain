<!--
// Copyright (c) 2025 Sander van Vliet
// Licensed under Artistic License 2.0
// See LICENSE or https://choosealicense.com/licenses/artistic-2.0/
-->

<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:RoadCaptain.App.RouteBuilder.ViewModels"
             xmlns:roadCaptain="clr-namespace:RoadCaptain;assembly=RoadCaptain"
             xmlns:converters="clr-namespace:RoadCaptain.App.Shared.Converters;assembly=RoadCaptain.App.Shared"
             mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="450"
             x:Class="RoadCaptain.App.RouteBuilder.Views.RouteSegmentListView"
             x:DataType="viewModels:RouteSegmentListViewModel">
    <Design.DataContext>
        <viewModels:DesignTimeRouteSegmentListViewModel />
    </Design.DataContext>
    <UserControl.Resources>
        <converters:BooleanConverter x:Key="BooleanConverter" />
        <converters:BitmapConverter x:Key="BitmapConverter" />
        <converters:NullabilityConverter x:Key="NullabilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="56" />
            <RowDefinition Height="*" />
            <RowDefinition Height="100" />
        </Grid.RowDefinitions>

        <Border
            Grid.Row="0"
            CornerRadius="0,5,0,0" Background="#1192CC" BorderBrush="#cccccc"
            HorizontalAlignment="Stretch" Padding="8,4,0,0" Height="56">
            <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal" Height="30">
                    <TextBlock Text="{Binding Path=Route.TotalDistance,StringFormat=\{0:0.0\}}" FontSize="26"
                               Foreground="White" FontWeight="Bold" VerticalAlignment="Bottom" />
                    <TextBlock Text="km" FontSize="16" Foreground="White" FontWeight="Bold" VerticalAlignment="Bottom"
                               Padding="2,0,0,2" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Height="18">
                    <TextBlock Text="⬈" FontSize="15" Margin="0,-2,0,0" Padding="0" FontWeight="ExtraBold" />
                    <TextBlock Text="{Binding Path=Route.TotalAscent,StringFormat=\{0:0.0\}}" FontSize="16"
                               FontWeight="Bold" VerticalAlignment="Bottom" />
                    <TextBlock Text="m" FontSize="10" FontWeight="Bold" VerticalAlignment="Bottom" Padding="0,0,0,1.5" />

                    <TextBlock Text="⬊" FontSize="15" Margin="0,-2,0,0" Padding="0" FontWeight="ExtraBold" />
                    <TextBlock Text="{Binding Path=Route.TotalDescent,StringFormat=\{0:0.0\}}" FontSize="16"
                               FontWeight="Bold" VerticalAlignment="Bottom" />
                    <TextBlock Text="m" FontSize="10" FontWeight="Bold" VerticalAlignment="Bottom" Padding="0,0,0,1.5" />
                </StackPanel>
            </StackPanel>
        </Border>
        <ListBox Grid.Row="1"
                 HorizontalAlignment="Stretch"
                 Padding="0"
                 Margin="0"
                 ItemsSource="{Binding Path=Route.Sequence}"
                 BorderThickness="0"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                 VerticalAlignment="Stretch"
                 Name="RouteListView"
                 KeyUp="RouteListView_KeyUp"
                 SelectionMode="Single"
                 SelectedItem="{Binding Path=SelectedSegmentSequence}">
            <ListBox.Styles>
                <Style Selector="ListBoxItem">
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Padding" Value="8,0,8,0" />
                </Style>
            </ListBox.Styles>
            <ListBox.ItemTemplate>
                <DataTemplate DataType="viewModels:SegmentSequenceViewModel">
                    <Grid Margin="0">
                        <Grid.Resources>
                            <Style Selector="TextBlock" x:Key="ListBoxItemStyle">
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="FontSize" Value="18" />
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24" />
                            <RowDefinition Height="24" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="24" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Path=SequenceNumber}"
                                   HorizontalAlignment="Center" Margin="0,4,0,0" />
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Path=TurnGlyph}" FontSize="14"
                                   Foreground="#1192CC" Margin="4,-2,0,0"
                                   Padding="0" FontWeight="ExtraBold" HorizontalAlignment="Left"
                                   VerticalAlignment="Center" />

                        <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Path=SegmentName}" Margin="4,4,0,0"
                                   TextTrimming="CharacterEllipsis" ToolTip.Tip="{Binding Path=SegmentId}" />

                        <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal" Margin="4,0,0,0"
                                    Grid.ColumnSpan="{Binding Path=ColumnSpan}">
                            <StackPanel Orientation="Horizontal" Height="18">
                                <TextBlock Text="{Binding Path=Distance,StringFormat=\{0:0.0\}}" FontSize="16"
                                           FontWeight="Bold" VerticalAlignment="Bottom" />
                                <TextBlock Text="km" FontSize="10" FontWeight="Bold" VerticalAlignment="Bottom"
                                           Padding="0,0,0,1.5" />


                                <TextBlock Text="⬈" FontSize="15" Margin="0,-2,0,0" Padding="0" FontWeight="ExtraBold" />
                                <TextBlock Text="{Binding Path=Ascent,StringFormat=\{0:0.0\}}" FontSize="16"
                                           FontWeight="Bold" VerticalAlignment="Bottom" />
                                <TextBlock Text="m" FontSize="10" FontWeight="Bold" VerticalAlignment="Bottom"
                                           Padding="0,0,0,1.5" />

                                <TextBlock Text="⬊" FontSize="15" Margin="0,-2,0,0" Padding="0" FontWeight="ExtraBold" />
                                <TextBlock Text="{Binding Path=Descent,StringFormat=\{0:0.0\}}" FontSize="16"
                                           FontWeight="Bold" VerticalAlignment="Bottom" />
                                <TextBlock Text="m" FontSize="10" FontWeight="Bold" VerticalAlignment="Bottom"
                                           Padding="0,0,0,1.5" />
                            </StackPanel>
                        </StackPanel>

                        <Image Grid.Column="2" Grid.Row="0" Grid.RowSpan="2"
                               Source="{Binding Path=LoopImage,Converter={StaticResource BitmapConverter}}"
                               IsVisible="{Binding Path=LoopImage,Converter={StaticResource NullabilityConverter}}"
                               Width="24"
                               Height="56" />
                        <Button Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                                Height="24"
                                Width="40"
                                FontSize="14"
                                Padding="0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Margin="0,4,4,0"
                                Command="{Binding Path=$parent[UserControl].((viewModels:RouteSegmentListViewModel)DataContext).ConfigureLoopCommand}"
                                IsVisible="{Binding Path=Type, Converter={StaticResource BooleanConverter}, ConverterParameter={x:Static roadCaptain:SegmentSequenceType.LoopStart}}">
                            <Button.Template>
                                <ControlTemplate>
                                    <Border
                                        BorderBrush="{StaticResource ZwiftOrange}"
                                        BorderThickness="4"
                                        Background="{StaticResource ZwiftOrange}"
                                        CornerRadius="25"
                                        Padding="6,0,6,0">
                                        <StackPanel>
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="White"
                                                FontWeight="Bold"
                                                ToolTip.Tip="This loop will be followed a number of times and then continue with the rest of the route"
                                                Text="{Binding Path=$parent[UserControl].((viewModels:RouteSegmentListViewModel)DataContext).Route.NumberOfLoops, FallbackValue=0, TargetNullValue=0}"
                                                IsVisible="{Binding Path=$parent[UserControl].((viewModels:RouteSegmentListViewModel)DataContext).Route.LoopMode, FallbackValue=false, TargetNullValue=false, Converter={StaticResource BooleanConverter}, ConverterParameter={x:Static roadCaptain:LoopMode.Constrained}}" />
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="White"
                                                FontWeight="Bold"
                                                Text="∞"
                                                ToolTip.Tip="This is an infinite loop, you must end the activity yourself when you have had enough!"
                                                IsVisible="{Binding Path=$parent[UserControl].((viewModels:RouteSegmentListViewModel)DataContext).Route.LoopMode, FallbackValue=false, TargetNullValue=false, Converter={StaticResource BooleanConverter}, ConverterParameter={x:Static roadCaptain:LoopMode.Infinite}}" />
                                        </StackPanel>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Grid Grid.Row="2" Background="#F2F2F2">
            <Grid.RowDefinitions>
                <RowDefinition Height="18" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="Segments on route:" FontWeight="Bold" Margin="4,0,0,0" />
            <ListBox Grid.Row="1"
                     Name="MarkersOnRouteListBox"
                     Margin="4,0,0,0"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     VerticalAlignment="Stretch"
                     BorderThickness="0"
                     ItemsSource="{Binding Path=Route.Markers}"
                     SelectionMode="Single"
                     SelectedItem="{Binding Path=SelectedMarker, Mode=TwoWay}">
                <ListBox.Styles>
                    <Style Selector="ListBoxItem">
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="8,0,8,0" />
                    </Style>
                </ListBox.Styles>
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="viewModels:MarkerViewModel">
                        <StackPanel Orientation="Horizontal" Margin="0" VerticalAlignment="Center">
                            <TextBlock Text="{Binding Path=TypeGlyph}" Width="20" TextAlignment="Center" />
                            <TextBlock Text="{Binding Path=Name}" Margin="4,2,0,0" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</UserControl>
